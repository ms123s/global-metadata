{
	"title": "Camel",
	"namespace": "http://b3mn.org/stencilset/camel#",
	"idIsCaseSensitiv":true,
	"prefix":"sw",
	"propertyPackages": [{
		"name": "baseProperties",
		"properties": [{
      "id" : "overrideid",
      "type" : "String",
      "title" : "Id",
      "value" : "",
			"include":false,
      "popular" : true
		}, {
			"id": "name",
			"type": "String",
			"title": "Name",
			"value": "",
			"description": "The descriptive name.",
			"description_de": "Bezeichnung.",
			"optional": true,
			"length": "32",
			"include":false,
			"refToView": "text1"
		}, {
			"id": "documentation",
			"type": "Text",
			"title": "Documentation",
			"title_de": "Dokumentation",
			"value": "",
			"readonly": false,
			"optional": true,
			"length": "",
			"wrapLines": true,
			"popular": true
		}]
	},{
		"name": "routeBaseAttributes",
		"properties": [{
      "id" : "overrideid",
      "type" : "String",
      "title" : "Id",
      "value" : "",
			"include":true,
      "popular" : true
		},{
			"id": "documentation",
			"type": "Text",
			"title": "Documentation",
			"title_de": "Dokumentation",
			"value": "",
			"readonly": false,
			"optional": true,
			"length": "",
			"wrapLines": true,
			"popular": true
		},{
			"id": "autostart",
			"title":"Autostart",
			"type":"boolean",
			"value": true,
			"visible": true
		},{
			"id": "enabled",
			"title":"Enabled",
			"title_de":"Aktiviert",
			"type":"boolean",
			"value": true,
			"visible": true
		},{
			"id": "logExceptionsOnly",
			"title":"Log exceptions only",
			"title_de":"Nur Ausnah. loggen",
			"description":"Log exceptions only",
			"description_de":"Nur Ausnahmen loggen",
			"type":"boolean",
			"value": false,
			"visible": true
		}]
	},{
		"name": "endpointProperties",
		"properties": [{
			"id": "name",
			"type": "String",
			"title": "Name",
			"title_de": "Name",
			"value": "",
			"readonly": false,
			"optional": true,
			"refToView": ["endpoint_type"],
			"popular": true
		}]
	},{
		"name": "colorProperties",
		"properties": [{
			"id": "bgcolor",
			"type": "Color",
			"title": "BackgroundColor",
			"title_de": "Hintergrundfarbe",
			"value": "white",
			"readonly": false,
			"optional": false,
			"refToView": "fill_el",
			"fill": true,
			"stroke": false
		},{
			"id": "bordercolor",
			"type": "Color",
			"title": "Border color",
			"title_de": "Rahmenfarbe",
			"value": "#000000",
			"description": "Change the border color for a visual differentiation.",
			"description_de": "Ändern Sie die Rahmenfarbe für eine visuelle Unterscheidung.",
			"readonly": false,
			"optional": false,
			"refToView": ["bg_frame"],
			"fill": false,
			"stroke": true
		}]
	},{
		"name": "expressionProperties",
		"properties": [ {
			"id": "expression",
			"title":"Expression",
			"title_de":"Ausdruck",
			"type":"Text",
			"value": "",
      "popular" : false,
			"visible": "defaultflow=='none'"
		},{
			"id": "language",
			"title": "Language",
			"title_de": "Sprache",
			"readonly": false,
			"type": "Choice",
			"value": "groovy",
			"visible": "defaultflow=='none'",
			"items": "###language_items",
			"width": 80,
			"optional": true
		}]
	},{
		"name": "marshalProperties",
		"properties": [{
			"id": "format",
			"title":"Dataformattype",
			"type":"Choice",
      "popular" : false,
			"refToView": ["text2"],
			"value": "csv",
      "items" : [ {
        "id" : "c1",
        "title" : "csv",
        "value" : "csv"
      }, {
        "id" : "c2",
        "title" : "json",
        "value" : "json"
      }, {
        "id" : "c3",
        "title" : "base64",
        "value" : "base64"
			}],
			"visible": true
		},{
			"id": "csv_configRef",
			"title":"ConfigRef",
			"type":"String",
			"value": "",
      "popular" : false,
			"visible": "format=='csv'"
		},{
			"id": "csv_strategyRef",
			"title":"StrategyRef",
			"type":"String",
			"value": "",
      "popular" : false,
			"visible": "format=='csv'"
		},{
			"id": "csv_delimiter",
			"title":"Delimiter",
			"title_de":"Begrenzer",
			"description":"The column delimiter to use.",
			"type":"String",
			"value": ",",
      "popular" : false,
			"visible": "format=='csv'"
		},{
			"id": "csv_skipFirstLine",
			"title":"Skip first line",
			"title_":"Erste Zeile überg.",
			"description":"Whether or not to skip the first line of CSV input when unmarshalling<br/> (e.g. if the content has headers on the first line)",
			"type":"boolean",
			"value": false,
      "popular" : false,
			"visible": "format=='csv'"
		},{
			"id": "csv_lazyLoad",
			"title":"LazyLoad",
			"description":"Whether or not to Sequential access CSV input through an iterator<br/> which could avoid OOM exception when processing huge CSV file.",
			"type":"boolean",
			"value": false,
      "popular" : false,
			"visible": "format=='csv'"
		},{
			"id": "csv_useMaps",
			"title":"UseMaps",
			"description":"Whether to use List<Map> when unmarshalling instead of List<List>.",
			"type":"boolean",
			"value": false,
      "popular" : false,
			"visible": "format=='csv' && func=='unmarshal'"
		},{
			"id": "json_prettyPrint",
			"title":"PrettyPrint",
			"description":"Enables pretty printing, which adds white space as needed to tidy up the resulting XML for easy reading.",
			"type":"boolean",
			"value": true,
      "popular" : false,
			"visible": "format=='json' && func=='marshal'"
		},{
			"id": "json_library",
			"title":"Library",
			"description":"",
			"type":"Choice",
			"value": "flexjson",
      "popular" : false,
      "items" : [ {
        "id" : "c1",
        "title" : "flexjson",
        "value" : "flexjson"
      }, {
        "id" : "c2",
        "title" : "xstream",
        "value" : "xstream"
      }, {
        "id" : "c3",
        "title" : "gson",
        "value" : "gson"
			}],
			"visible": "format=='json'"
		}]
	}, {
		"name": "delayProperties",
		"properties": [ {
			"id": "expression",
			"title":"Expression",
			"title_de":"Ausdruck",
			"description":"Expression defining the length of the delay",
      "optional" : false;
			"type":"Text",
			"value": ""
		},{
			"id": "language",
			"title": "Language",
			"title_de": "Sprache",
			"readonly": false,
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"width": 80,
			"optional": true
		},{
			"id": "async",
			"title":"Async delayed",
			"description":"If enabled then delayed messages happens asynchronously using a scheduled thread pool.",
			"type":"boolean",
			"value": false,
			"visible": true
		}]
	}, {
		"name": "messageFilterProperties",
		"properties": [ {
			"id": "expression",
			"title":"Expression",
			"title_de":"Ausdruck",
			"description":"Specifies the expression used to determine if the message is to be filtered from the route.",
			"type":"Text",
			"value": ""
		},{
			"id": "language",
			"title": "Language",
			"title_de": "Sprache",
			"readonly": false,
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items"
		}]
	}, {
		"name": "recipientListProperties",
		"properties": [ {
			"id": "expression",
			"title":"Expression",
			"title_de":"Ausdruck",
			"description":"Specifies the expression used to generate the list of recipients.",
      "optional" : false;
			"type":"Text"
		},{
			"id": "language",
			"title": "Language",
			"title_de": "Sprache",
			"readonly": false,
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"width": 80,
			"optional": true
		},{
			"id": "option_ignoreInvalidEndpoints",
			"title":"Ignore invalid EP",
			"description":"Whether to ignore an endpoint URI that could not be resolved.<br/>If disabled, Camel will throw an exception identifying the invalid endpoint URI.",
			"type":"boolean",
			"value": false,
			"visible": true
		}, {
			"id": "option_delimiter",
			"title": "Delimiter",
			"description":"Delimiter used if the Expression returned multiple endpoints.",
			"type": "String",
			"value": ",",
			"optional": true
		}, {
			"id": "extraOptions",
			"type": "Complex",
			"title": "Extra Options",
			"description": "Extra Options",
			"description_de": "Zusätzliche Optionen",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 250,
				"optional": false
			}]
		}]
	}, {
		"name": "splitterProperties",
		"properties": [ {
			"id": "expression",
			"title":"Expression",
			"title_de":"Ausdruck",
			"description":"Specifies the expression used to split the message.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "language",
			"title": "Language",
			"title_de": "Sprache",
			"description":"Specifies the expression language used to process the expression.",
			"readonly": false,
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"width": 80,
			"optional": true
		},{
			"id": "option_onPrepareRef",
			"title":"On Prepare ref",
			"description":"Specifies a reference to a bean implementing a custom onPrepare processor<br/> that processes the original message before it is split up and passed to the next step in the route<br/> This property enables you to deep clone mutable message bodies, so the splitter creates separate, self-contained fragments of the message<br/> You can use this property to execute any kind of logic on a message exchange<br/>",
			"type":"String",
			"value": "",
			"visible": true
		}, {
			"id": "extraOptions",
			"type": "Complex",
			"title": "Extra Options",
			"description": "Extra Options",
			"description_de": "Zusätzliche Optionen",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 250,
				"optional": false
			}]
		},{
      "id" : "loggingOff",
      "title" : "Logging off",
      "title_" : "Logging aus",
      "description" : "",
      "type" : "boolean",
			"readonly": false,
      "value" : false
		}]
	}, {
		"name": "aggregateProperties",
		"properties": [ 
			{
			"id": "correlationExpression",
			"title":"Correlation Expression",
			"description":"Specifies the expression used to correlate the messages that are aggregated.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "correlationLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the correlation expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		}, {
			"id": "completionPredicate",
			"title":"Completion Predicate",
			"description":"Specifies the expression used to determine when the aggregated message is complete based on it's contents.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "completionLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the completion predicate expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		}, {
			"id": "completionSizeExpression",
			"title":"Completion Size",
			"description":"Specifies an expression used to determine when aggregation is complete based on the number of exchanges processed.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "completionSizeLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the completion size expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		}, {
			"id": "completionTimeoutExpression",
			"title":"Completion Timeout",
			"description":"Specifies an expression used to determine when aggregation is complete based on the amount of time,<br/> in milliseconds, the aggregator has been inactive.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "completionTimeoutLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the completion timeout expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		},{
			"id": "option_strategyRef",
			"title": "StrategyRef",
			"description":"Specifies a reference for looking up the AggregationStrategy in the registry.",
			"type": "String",
			"value": null,
			"optional": false
		},{
			"id": "extraOptions",
			"type": "Complex",
			"title": "Extra Options",
			"description": "Extra Options",
			"description_de": "Zusätzliche Optionen",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 250,
				"optional": false
			}]
		}]
	}, {
		"name": "extraParamsProperties",
		"properties": [{
			"id": "extraParams",
			"type": "Complex",
			"title": "Extra Parameter",
			"description": "Extra Parameter",
			"description_de": "Zusätzliche Parameter",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 250,
				"optional": false
			}]
		}]
	}, {
		"name": "genericEndpointProperties",
		"properties": [{
			"id": "uri",
			"title":"Uri",
			"value": "" ,
			"type":"String",
			"visible": true
		}, {
			"id": "extraParams",
			"type": "Complex",
			"title": "UriParameter",
			"description": "UriParameter",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 250,
				"optional": false
			}]
		}]
	}, {
		"name": "headersProperties",
		"properties": [{
			"id": "headers",
			"type": "Complex",
			"title": "Headers",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			},{
				"id": "language",
				"name": "Language",
				"name_de": "Sprache",
				"readonly": false,
				"type": "Choice",
				"value": "groovy",
				"items": "###language_items",
				"width": 80,
				"optional": true
			}]
		}]
	}, {
		"name": "propertiesProperties",
		"properties": [{
			"id": "properties",
			"type": "Complex",
			"title": "Properties",
			"value": "",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "value",
				"name_de": "Wert",
				"name": "Value",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			},{
				"id": "language",
				"name": "Language",
				"name_de": "Sprache",
				"readonly": false,
				"type": "Choice",
				"value": "groovy",
				"items": "###language_items",
				"width": 80,
				"optional": true
			}]
		}]
	}, {
		"name": "transactedProperties",
		"properties": [{
      "id" : "propagationBehavior",
      "type" : "Choice",
      "title" : "PropagationBehavior",
      "value" : "PROPAGATION_REQUIRED",
      "items" : [ {
        "id" : "c1",
        "title" : "Propagation requires new",
        "value" : "PROPAGATION_REQUIRES_NEW"
      }, {
        "id" : "c2",
        "title" : "Propagation required",
        "value" : "PROPAGATION_REQUIRED"
      }, {
        "id" : "c3",
        "title" : "Propagation never",
        "value" : "PROPAGATION_NEVER"
			}]
		}]
	}, {
		"name": "onExceptionProperties",
		"properties": [{
			"id": "continued",
			"title":"Continued",
			"description":"Specifies an expression that determines whether the exception is ignored and<br/> processing of the original route continues after the onException route completes.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "continuedLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the continued expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		},{
			"id": "handled",
			"title":"Handled",
			"description":"Specifies an expression that determines if the exception is marked as handled.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "handledLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the handled expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		},{
			"id": "retryWhile",
			"title":"RetryWhile",
			"description":"Specifies an expression that determines if the message causing the exception should be redelivered.<br/>The message is redelivered until the expression evaluates to false.",
      "optional" : false,
			"type":"Text"
		},{
			"id": "retryWhileLanguage",
			"title": "Language",
			"description":"Specifies the expression language used to process the retryWhile expression.",
			"type": "Choice",
			"value": "groovy",
			"items": "###language_items",
			"optional": true
		},{
      "id" : "exceptions",
      "type" : "Complex",
      "title" : "Exceptions",
      "value": "{ \"totalCount\": 1, \"items\": [ { \"exception\": \"java.lang.Exception\" } ] }",
      "description" : "Specifies the list of exceptions the node handles.<br/>The Add button adds an entry typed in the field.<br/>The Delete button removes the selected entry from the list.",
      "popular" : false,
      "complexItems" : [ {
        "id" : "exception",
        "name" : "Name",
        "type" : "String",
        "value" : "",
        "width" : 200,
        "optional" : false
      } ]
		}]
	}, {
		"name": "rollbackProperties",
		"properties": [{
      "id" : "markRollbackOnly",
      "title" : "RollbackOnly",
      "description" : "Specifies whether the entire transaction is rolled back, without throwing a RollbackExchangeException.<br/>This property cannot be enabled when Rollback Only Last is enabled.",
      "type" : "boolean",
			"readonly": "markRollbackOnlyLast!=false",
      "value" : false
		},{
      "id" : "markRollbackOnlyLast",
      "title" : "RollbackOnlyLast",
      "description" : "Specifies whether the current transaction is rolled back, without throwing a RollbackExchangeException.<br/>This property cannot be enabled when Rollback Only is enabled..",
      "type" : "boolean",
			"readonly": "markRollbackOnly!=false",
      "value" : false
		}]
	},{
		"name": "databaseProperties",
		"properties": [{
			"id": "type_database",
			"type":"String",
			"value": "Database",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "swdata:${operation}",
			"visible": false
		},{
			"id": "urivalue_operation",
			"title":"Operation",
			"title_de":"Operation",
			"type":"Choice",
			"value": "insert",
      "items" : [ {
        "id" : "c1",
        "title" : "Insert",
        "value" : "insert"
      }, {
        "id" : "c2",
        "title" : "Update",
        "value" : "update"
      }, {
        "id" : "c3",
        "title" : "Delete",
        "value" : "delete"
      }, {
        "id" : "c4",
        "title" : "FindById",
        "value" : "findById"
      }, {
        "id" : "c5",
        "title" : "FindByFilter",
        "value" : "findByFilter"
      }, {
        "id" : "c6",
        "title" : "FindOneByFilter",
        "value" : "findOneByFilter"
      }, {
        "id" : "c7",
        "title" : "MultiInsertUpdate",
        "value" : "multiInsertUpdate"
			}],
			"visible": true
		},{
			"id": "uriparam_relation",
			"title":"Relation",
			"title_de":"Relation",
			"config":{type:"ms123.util.RelationList"},
			"type":"Choice",
			"value": null,
      "items" : [],
			"visible": "urivalue_operation=='multiInsertUpdate'"
		},{
			"id": "uriparam_lookupRelationObjectExpr",
			"title":"Object lookup",
			"title_de":"Objekt lookup",
      "description_de": "Relation Objekt lookup, Möglichkeiten der Eingabe<ul><li>feldname: Bei einem Feld muß das Vergleichsfeld in Parent und Child gleich sein </li><li>parentfeld,childfeld</li><li>countryId==${countryId}: JDO-Filterausdruck</li></ul>",
      "description": "Relation object lookup, ways of entering<ul><li>fieldname: One field, comparison field has the same name in parent and child</li><li>parentfield,childfield</li><li>countryId==${countryId}: JDO-Filterexpression</li></ul>",
			"type":"String",
			"value": null,
			"visible": "urivalue_operation=='multiInsertUpdate' && uriparam_relation!='-'"
		},{
			"id": "isupdate",
			"title":"Update",
			"title_de":"Update",
			"description": "<b>Update Object</b>, when exist, insteed create always a new one",
			"description_de": "<b>Update Objekt</b>, wenn vorhanden, ansonsten erzeuge immer ein Neues",
			"type":"boolean",
			"value": false,
			"visible": "urivalue_operation=='multiInsertUpdate'"
		},{
			"id": "uriparam_lookupUpdateObjectExpr",
			"title":"Object lookup",
			"title_de":"Objekt lookup",
      "description_de": "Update Objekt lookup:, Möglichkeiten der Eingabe<ul><li>Feldname</li><li>JDO-Filterausdruck<br/>Integer: <b>countryId==${countryId}</b><br/>String: <b>countryId=='${countryId}'</b></li></ul>",
      "description": "Update object lookup:, ways of entering<ul><li>Fieldname</li><li>JDO-Filterexpression<br/>Integer: <b>countryId==${countryId}</b><br/> String: <b>countryId=='${countryId}'</b></li></ul>",
			"type":"String",
			"value": "",
			"visible": "urivalue_operation=='multiInsertUpdate' && isupdate==true"
		},{
			"id": "uriparam_noUpdate",
			"title":"No update",
			"title_de":"Kein update",
      "description_de": "Vorhandene Objekte nicht updaten, nur neue Objekte erzeugen",
      "description": "Not update existing objects, create new objects only",
			"type":"boolean",
			"value": false,
			"visible": "urivalue_operation=='multiInsertUpdate' && isupdate==true"
		}]
	},{
		"name": "fileProperties",
		"properties": [{
			"id": "type_file",
			"type":"String",
			"value": "File",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "file:${path}",
			"visible": false
		},{
			"id": "urivalue_path",
			"title":"Path",
			"title_de":"Pfad",
			"type":"String",
			"value": "",
			"visible": true
		}]
	},{
		"name": "commonFileProperties",
		"properties": [{
			"id": "uriparam_fileName",
			"title":"Filename",
			"title_de":"Dateiname",
			"description":"Use Expression such as <a  target='_blank' href='http://camel.apache.org/file-language.html'>File Language</a> to dynamically set the filename.<br/>For consumers, it's used as a filename filter.<br/>For producers, it's used to evaluate the filename to write.<br/>If an expression is set, it take precedence over the CamelFileName header.",
			"type":"String",
			"value": "",
			"visible": true
		},{
			"id": "uriparam_charset",
			"type": "Combo",
			"title": "Encoding",
			"description":"specify the encoding of the file",
			"value": "UTF-8",
			"items": [{
				"id": "c1",
				"value": "UTF-8",
				"title": "UTF-8"
			},{
				"id": "c2",
				"value": "ISO-8859-15",
				"title": "ISO-8859-15"
			}]
		},{
			"id": "uriparam_delete",
			"title":"Delete",
			"title_de":"Entfernen",
			"description":"If true, the file will be deleted after it is processed successfully.",
			"type":"boolean",
			"value": false,
			"visible": true
		},{
			"id": "uriparam_recursive",
			"title":"Recursive",
			"title_de":"Rekursiv",
			"description":"If a directory, will look for files in all the sub-directories as well.",
			"type":"boolean",
			"value": false,
			"visible": true
		},{
			"id": "uriparam_noop",
			"title":"Noop",
			"title_de":"Noop",
			"description":"If true, the file is not moved or deleted in any way",
			"type":"boolean",
			"value": false
		},{
			"id": "uriparam_flatten",
			"title":"Flatten",
			"description":"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name",
			"type":"boolean",
			"value": false
		},{
			"id": "uriparam_autoCreate",
			"title":"Autocreate",
			"description":"Automatically create missing directories in the file's pathname",
			"type":"boolean",
			"value": true
		},{
			"id": "uriparam_consumer.delay",
			"title":"Delay",
			"title_de":"Verzögerung",
			"description":"Milliseconds before the next poll of the file/directory.",
			"type":"string",
			"value": "5000"
		},{
			"id": "uriparam_moveFailed",
			"title":"MoveFailed",
			"description":"Expression (such as File Language) used to dynamically set a different target directory<br/> when moving files in case of processing (configured via move defined above) failed.<br/>For example, to move files into a .error subdirectory use: .error.<br/>Note: When moving the files to the “fail” location<br/> Camel will handle the error and will not pick up the file again.",
			"type":"string",
			"value": ".error"
		},{
			"id": "uriparam_antInclude",
			"title":"Include",
			"description":"Ant style filter inclusion, for example antInclude=*.txt.<br/> Multiple inclusions may be specified in comma-delimited format.<br/><ul><li>? matches one character</li><li>* matches zero or more characters</li><li>** matches zero or more directories in a path</li></ul>",
			"type":"string",
			"value": ""
		},{
			"id": "uriparam_antExclude",
			"title":"Exclude",
			"description":"Ant style filter exclusion.<br/>If both antInclude and antExclude are used, antExclude takes precedence over antInclude.<br/>Multiple exclusions may be specified in comma-delimited format.",
			"type":"string",
			"value": ""
		}]
	},{
		"name": "processorProperties",
		"properties": [{
			"id": "ref",
			"type":"String",
			"title": "Reference",
			"description": "Reference to the bean implementing the processor's logic",
			"value": "",
			"visible": true,
			"optional": true
		},{
			"id": "code",
			"config":{"mode":"text/x-groovy", "xelper":"ProcessScript"},
			"type": "Text",
			"title": "Code",
			"value": "",
			"description": "anonymous inner class implementing the processor's logic",
			"optional": true
		},{
			"id": "isEndpoint",
			"title":"Endpoint",
			"type":"Boolean",
			"value": false
		}]
	},{
		"name": "datamapperProperties",
		"properties": [{
			"id": "strategy",
			"type": "ResourceSelector",
			"config": {"type":"sw.datamapper","prefix":""},
			"title": "Strategy",
			"title_de": "Strategie",
			"value": "",
			"description": "",
			"readonly": false,
			"optional": true
		}]
	},{
		"name": "directProperties",
		"properties": [{
			"id": "type_direct",
			"type":"String",
			"value": "Direct",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "direct:${name}",
			"visible": false
		},{
			"id": "urivalue_name",
			"title":"Name",
			"type":"String",
			"value": "direct1",
			"visible": true
		}]
	},{
		"name": "sedaProperties",
		"properties": [{
			"id": "type_seda",
			"type":"String",
			"value": "Seda",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "seda:${name}",
			"visible": false
		},{
			"id": "urivalue_name",
			"title":"Name",
			"type":"String",
			"value": "seda1",
			"visible": true
		}]
	},{
		"name": "vmProperties",
		"properties": [{
			"id": "type_vm",
			"type":"String",
			"value": "VM",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "vm:${name}",
			"visible": false
		},{
			"id": "urivalue_name",
			"title":"Name",
			"type":"String",
			"value": "vm1",
			"visible": true
		}]
	},{
		"name": "sedaVmProperties",
		"properties": [{
			"id": "urivalue_concurrentConsumers",
			"title":"ConcurrentConsumers",
			"description":"Number of concurrent threads processing exchanges.",
			"type":"Integer",
			"value": "1",
			"visible": true
		},{
			"id": "urivalue_timeout",
			"title":"Timeout",
			"description":"Timeout (in milliseconds) before a SEDA producer will stop waiting for an asynchronous task to complete.",
			"type":"Integer",
			"value": "30000",
			"visible": true
		},{
			"id": "urivalue_pollTimeout",
			"title":"PollTimeout",
			"description":"Consumer only – The timeout used when polling.",
			"type":"Integer",
			"value": "1000",
			"visible": true
		},{
			"id": "uriparam_waitForTaskToComplete",
			"type": "Combo",
			"title": "WaitForTaskToComplete",
			"description":"Option to specify whether the caller should wait for the async task to complete or not before continuing.",
			"value": "IfReplyExpected",
			"items": [{
				"id": "c1",
				"value": "IfReplyExpected",
				"title": "IfReplyExpected"
			},{
				"id": "c2",
				"value": "Always",
				"title": "Always"
			},{
				"id": "c3",
				"value": "Never",
				"title": "Never"
			}]
		},{
			"id": "uriparam_multipleConsumers",
			"title":"MultipleConsumers",
			"description":"Specifies whether multiple consumers are allowed.<br/>If enabled, you can use SEDA for Publish-Subscribe messaging.<br/>That is, you can send a message to the SEDA queue and have each<br/> consumer receive a copy of the message.",
			"type":"boolean",
			"value": false,
			"visible": true
		},{
			"id": "uriparam_blockWhenFull",
			"title":"BlockWhenFull",
			"description":"Whether a thread that sends messages to a full SEDA queue will<br/>block until the queue's capacity is no longer exhausted.<br/>By default, an exception will be thrown stating that the queue is full.",
			"type":"boolean",
			"value": false,
			"visible": true
		}]
	},{ 
		"name": "ftpProperties",
		"properties": [{
			"id": "type_ftp",
			"type":"String",
			"value": "FTP",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "${protocol}://${host}:${port}/${directory}",
			"visible": false
    },{
      "id" : "urivalue_protocol",
      "type" : "Choice",
      "title" : "Protocol",
      "title_de" : "Protokoll",
      "value" : "sftp",
      "items" : [ {
        "id" : "c1",
        "title" : "SFTP",
        "value" : "sftp"
      }, {
        "id" : "c2",
        "title" : "FTPS",
        "value" : "ftps"
      }, {
        "id" : "c3",
        "title" : "FTP",
        "value" : "ftp"
      }]
		},{
			"id": "urivalue_host",
			"title":"Host",
			"type":"String",
			"value": "",
			"optional": false
		},{
			"id": "urivalue_port",
			"title":"Port",
			"type":"Integer",
			"value": "21"
		},{
			"id": "urivalue_directory",
			"title":"Directory",
			"title_de":"Verzeichnis",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_username",
			"title":"Username",
			"type":"String",
			"value": "",
			"visible": true
		},{
			"id": "uriparam_password",
			"title":"Password",
			"title_de":"Passwort",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_passiveMode",
			"title":"Passive",
			"type":"Boolean",
			"value": false
		},{
			"id": "uriparam_binary",
			"title":"Binary",
			"type":"Boolean",
			"value": true
		},{
			"id": "uriparam_consumer.delay",
			"title":"Poll(milliSec)",
			"type":"Integer",
			"value": 1000
		}]
	},{ 
		"name": "mailProperties",
		"properties": [{
			"id": "type_mail",
			"type":"String",
			"value": "Mail",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "${protocol}://${host}:${port}",
			"visible": false
    },{
      "id" : "urivalue_protocol",
      "type" : "Choice",
      "title" : "Protocol",
      "title_de" : "Protokoll",
      "value" : "smtp",
      "items" : [{
        "id" : "c1",
        "title" : "SMTP",
        "value" : "smtp"
      }, {
        "id" : "c2",
        "title" : "IMAP",
        "value" : "imap"
      }, {
        "id" : "c3",
        "title" : "POP3",
        "value" : "pop3"
      }, {
        "id" : "c4",
        "title" : "SMTPS",
        "value" : "smtps"
      }, {
        "id" : "c5",
        "title" : "IMAPS",
        "value" : "imaps"
      }, {
        "id" : "c6",
        "title" : "POP3S",
        "value" : "pop3s"
      }]
		},{
			"id": "urivalue_host",
			"title":"Host",
			"type":"String",
			"value": "127.0.0.1",
			"optional": false
		},{
			"id": "urivalue_port",
			"title":"Port",
			"type":"Integer",
			"value": ""
		},{
			"id": "uriparam_username",
			"title":"Username",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_password",
			"title":"Password",
			"title_de":"Passwort",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_subject",
			"title":"Subject",
			"title_de":"Betreff",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_from",
			"title":"From",
			"title_de":"Von",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_to",
			"title":"To",
			"title_de":"An",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_cc",
			"title":"CC",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_bcc",
			"title":"BCC",
			"type":"String",
			"value": ""
		},{
			"id": "uriparam_contentType",
			"title":"ContentType",
			"type":"String",
			"value": "text/plain"
		}]
	},{
		"name": "diagram",
		"properties": [{
			"id": "version",
			"type": "String",
			"title": "Version",
			"value": "",
			"description": "This defines the version number of the diagram.",
			"description_de": "Setzt die Versionsnummer des Diagramms.",
			"readonly": false,
			"optional": true
		},{
			"id": "author",
			"type": "String",
			"title": "Author",
			"title_de": "Autor",
			"value": "",
			"description": "This holds the name of the diagram's author.",
			"description_de": "Name des Diagrammautors.",
			"readonly": false,
			"optional": true
		},{
			"id": "creationdate",
			"type": "Date",
			"title": "Creation date",
			"title_de": "Erstellt am",
			"value": "",
			"description": "This defines the date on which the diagram was created.",
			"description_de": "Datum, an dem das Diagramm erstellt wurde.",
			"readonly": false,
			"optional": true,
			"dateFormat": "j/m/y"
		},{
			"id": "modificationdate",
			"type": "Date",
			"title": "Modification date",
			"title_de": "Geändert am",
			"value": "",
			"description": "This defines the date on which the diagram was last modified.",
			"description_de": "Datum der letzten Änderung.",
			"readonly": false,
			"optional": true,
			"dateFormat": "j/m/y"
		}]
	}],
	"stencils": [{
		"type": "node",
		"id": "Camelrouting",
		"title": "Camelrouting",
		"groups": ["Diagram"],
    "view" : "diagram.svg",
		"icon": "diagram.png",
		"mayBeRoot": true,
		"hide": true,
		"propertyPackages": ["routeBaseAttributes", "diagram"],
		"roles": [],
		"properties": [ {
			"id": "camelcontext",
			"type": "String",
			"title": "Camelcontext",
			"title_de": "Camelcontext",
			"description": "Context to which the route belongs,when the context does not exist, then it is created",
			"description_de": "Camelcontext zu dem diese Route gehört, wenn der Context nicht existiert dann wird er erstellt",
			"value": "default",
			"readonly": false,
			"popular": false,
			"optional": true
		},{
			"id": "rpc",
			"title":"RPC",
			"description_de": "Soll die Route über rpc erreichbar sein?",
			"description": "Should be the route reachable via rpc?",
			"type":"boolean",
			"value": false,
			"visible": true
		},{
			"id": "rpcParameter",
			"type": "Complex",
			"title": "RPC-Parameter",
			"value": "",
			"visible": "rpc==true",
			"readonly": false,
			"optional": true,
			"complexItems": [{
				"id": "name",
				"name": "Name",
				"type": "String",
				"filter": "[a-zA-Z0-9]",
				"value": "",
				"width": 150,
				"optional": false
			}, {
				"id": "defaultvalue",
				"name_de": "Defaultwert",
				"name": "Defaultvalue",
				"type": "String",
				"value": "",
				"width": 150,
				"optional": false
			},{
				"id": "type",
				"name": "Type",
				"name_de": "Typ",
				"readonly": false,
				"type": "Choice",
				"value": "string",
				"items": "###parametertype_items",
				"width": 80,
				"optional": true
			},{
				"id": "destination",
				"name": "Destination",
				"name_de": "Ziel",
				"readonly": false,
				"type": "Choice",
				"value": "property",
				"items": "###destination_items",
				"width": 80,
				"optional": true
			}]
		},{
			"id": "startableGroups",
			"type": "MultiSelect",
			"config": "permission:getAllRoles:name",
			"title": "Permission (groups)",
			"title_de": "Erlaubt (Rollen)",
			"value": "",
			"visible": "rpc==true",
			"length": "50"
		},{
			"id": "startableUsers",
			"type": "MultiSelect",
			"config": "auth:getUsers:userid",
			"title": "Permission (user)",
			"title_de": "Erlaubt (User)",
			"value": "",
			"visible": "rpc==true",
			"length": "50"
		}]
	},
	{
    "type" : "node",
    "id" : "Endpoint",
    "title" : "Endpoint",
    "title_de" : "Endpunkt",
    "description" : "Generic Endpoint",
    "description_de" : "Allgemeiner Endpunkt",
    "view" : "endpoint.svg",
    "icon" : "genericendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "endpointProperties", "baseProperties", "colorProperties", "genericEndpointProperties"],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "FileEndpoint",
    "title" : "File Endpoint",
    "title_de" : "File Endpunkt",
    "view" : "fileendpoint.svg",
    "icon" : "fileendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "fileProperties", "commonFileProperties", "extraParamsProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "DatabaseEndpoint",
    "title" : "Database Endpoint",
    "title_de" : "Database Endpunkt",
    "view" : "database.svg",
    "icon" : "databaseendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "databaseProperties", "extraParamsProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "DirectEndpoint",
    "title" : "Direct Endpoint",
    "title_de" : "Direkt Endpunkt",
    "view" : "directendpoint.svg",
    "icon" : "directendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "directProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "SedaEndpoint",
    "title" : "Seda Endpoint",
    "title_de" : "Seda Endpunkt",
    "view" : "sedaendpoint.svg",
    "icon" : "sedaendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "sedaProperties", "sedaVmProperties", "extraParamsProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "VMEndpoint",
    "title" : "VM Endpoint",
    "title_de" : "VM Endpunkt",
    "view" : "vmendpoint.svg",
    "icon" : "vmendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "vmProperties", "sedaVmProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "FtpEndpoint",
    "title" : "FTP Endpoint",
    "title_de" : "FTP Endpunkt",
    "view" : "ftpendpoint.svg",
    "icon" : "ftpendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "ftpProperties", "extraParamsProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "MailEndpoint",
    "title" : "Mail Endpoint",
    "title_de" : "Mail Endpunkt",
    "view" : "mailendpoint.svg",
    "icon" : "mailendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties", "mailProperties", "extraParamsProperties" ],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
    "id" : "JMSEndpoint",
    "title" : "JMS Endpoint",
    "title_de" : "JMS Endpunkt",
    "view" : "jmsendpoint.svg",
    "icon" : "jmsendpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties" ],
		"properties": [{
			"id": "endpoint_type3",
			"type":"String",
			"value": "JMS",
			"visible": false,
			"refToView": ["endpoint_type"]
		}],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
    "type" : "node",
		"id" : "Http4Endpoint",
		"title" : "Http4 Endpoint",
		"title_de" : "Http4 Endpunkt",
    "view" : "http4endpoint.svg",
    "icon" : "http4endpoint.png",
    "groups" : [ "Endpoints" ],
		"groups_de": ["Endpunkte"],
    "propertyPackages" : [ "baseProperties", "colorProperties" ],
		"properties": [{
			"id": "endpoint_type5",
			"type":"String",
			"value": "http4",
			"visible": false,
			"refToView": ["endpoint_type"]
		},{
			"id": "uri_template",
			"type":"String",
			"value": "http4://${host}:${port}/${path}",
			"visible": false
		},{
			"id": "urivalue_host",
			"title":"Host",
			"type":"String",
			"value": "",
			"visible": true
		},{
			"id": "urivalue_port",
			"title":"Port",
			"type":"Integer",
			"value": "80",
			"visible": true
		},{
			"id": "urivalue_path",
			"title":"Path",
			"type":"String",
			"value": "",
			"visible": true
		}],
    "roles" : [ "simpleConnectionStart", "OneInOutRole", "simpleConnectionEnd", "whenConnectionEnd", "EndpointsMorph", "all" ]
	}, {
		"type": "node",
		"id": "Delay",
		"title": "Delay",
		"groups": ["Control Flow"],
    "view" : "delay.svg",
		"icon": "delay.png",
		"propertyPackages": ["baseProperties", "colorProperties", "delayProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd"]
	},
	{
		"type": "node",
		"id": "Transacted",
		"title": "Transacted",
		"groups": ["Control Flow"],
    "view" : "transacted.svg",
		"icon": "transacted.png",
		"propertyPackages": ["baseProperties", "colorProperties", "transactedProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd"]
	},
	{
		"type": "node",
		"id": "Rollback",
		"title": "Rollback",
		"groups": ["Control Flow"],
    "view" : "rollback.svg",
		"icon": "rollback.png",
		"propertyPackages": ["baseProperties", "colorProperties", "rollbackProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd"]
	},
	{
		"type": "node",
		"id": "onException",
		"title": "onException",
		"groups": ["Control Flow"],
    "view" : "exception.svg",
		"icon": "exception.png",
		"propertyPackages": ["baseProperties", "colorProperties", "onExceptionProperties"],
		"roles": ["all", "OneOutRole", "simpleConnectionStart"]
	},
	{
		"type": "node",
		"id": "SetHeader",
		"title": "SetHeader",
		"groups": ["Transformation"],
    "view" : "setheader.svg",
		"icon": "setheader.png",
		"propertyPackages": ["baseProperties", "colorProperties", "headersProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "SetProperty",
		"title": "SetProperty",
		"groups": ["Transformation"],
    "view" : "setproperty.svg",
		"icon": "setproperty.png",
		"propertyPackages": ["baseProperties", "colorProperties", "propertiesProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "Marshal",
		"title": "Marshal",
		"groups": ["Transformation"],
    "view" : "marshal.svg",
		"icon": "marshal.png",
		"propertyPackages": ["baseProperties", "colorProperties", "marshalProperties"],
		"properties": [{
			"id": "func",
			"value": "marshal" ,
			"visible": false
		}],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "Unmarshal",
		"title": "Unmarshal",
		"groups": ["Transformation"],
    "view" : "unmarshal.svg",
		"icon": "marshal.png",
		"propertyPackages": ["baseProperties", "colorProperties", "marshalProperties"],
		"properties": [{
			"id": "func",
			"value": "unmarshal" ,
			"visible": false
		}],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "ConvertBodyTo",
		"title": "ConvertBodyTo",
		"groups": ["Transformation"],
    "view" : "convertBodyTo.svg",
		"icon": "marshal.png",
		"propertyPackages": ["baseProperties", "colorProperties"],
		"properties": [{
			"id": "type",
			"title":"Type",
			"value": "java.lang.String" ,
			"type":"String",
			"visible": true
		},{
			"id": "charset",
			"title":"Charset",
			"title_de":"Zeichensatz",
			"value": "utf-8" ,
			"type":"String",
			"visible": true
		}],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "Processor",
		"title": "Processor",
		"groups": ["Transformation"],
    "view" : "processor.svg",
		"icon": "processor.png",
		"propertyPackages": ["baseProperties", "colorProperties", "processorProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "Datamapper",
		"title": "Datamapper",
		"groups": ["Transformation"],
    "view" : "datamapper.svg",
		"icon": "datamapper.png",
		"propertyPackages": ["baseProperties", "colorProperties", "datamapperProperties"],
		"roles": ["all", "OneInOutRole", "simpleConnectionStart", "simpleConnectionEnd", "whenConnectionEnd", "TransformerMorph"]
	},
	{
		"type": "node",
		"id": "MessageFilter",
		"title": "Filter",
		"groups": ["Routing"],
    "view" : "messagefilter.svg",
		"icon": "messagefilter.png",
		"propertyPackages": ["baseProperties", "colorProperties", "messageFilterProperties"],
		"roles": ["all", "simpleConnectionStart", "simpleConnectionEnd", "RoutingMorph"]
	},
	{
		"type": "node",
		"id": "MessageChoice",
		"title": "Choice",
		"groups": ["Routing"],
    "view" : "messagechoice.svg",
		"icon": "messagechoice.png",
		"propertyPackages": ["baseProperties", "colorProperties"],
		"properties": [
		],
		"roles": ["all", "whenConnectionStart", "whenConnectionEnd", "simpleConnectionEnd", "RoutingMorph"]
	},
	{
		"type": "node",
		"id": "MessageAggregate",
		"title": "Aggregate",
		"groups": ["Routing"],
    "view" : "messageaggregate.svg",
		"icon": "messageaggregate.png",
		"propertyPackages": ["baseProperties", "colorProperties", "aggregateProperties"],
		"properties": [
		],
		"roles": ["all", "simpleConnectionStart", "simpleConnectionEnd", "RoutingMorph"]
	},
	{
		"type": "node",
		"id": "MessageSplitter",
		"title": "Splitter",
		"groups": ["Routing"],
    "view" : "messagesplitter.svg",
		"icon": "messagesplitter.png",
		"propertyPackages": ["baseProperties", "colorProperties", "splitterProperties"],
		"properties": [
		],
		"roles": ["all", "simpleConnectionStart", "simpleConnectionEnd", "RoutingMorph"]
	},
	{
		"type": "node",
		"id": "Recipientlist",
		"title": "Recipientlist",
		"groups": ["Routing"],
    "view" : "recipientlist.svg",
		"icon": "recipientlist.png",
		"propertyPackages": ["baseProperties", "colorProperties", "recipientListProperties"],
		"properties": [
		],
		"roles": ["all", "simpleConnectionStart", "simpleConnectionEnd", "RoutingMorph"]
	},
	{
		"type": "edge",
		"id": "SimpleConnection",
		"title": "Connection",
		"title_de": "Verbindung",
		"groups": ["Connecting Objects"],
		"groups_de": ["Konnektoren"],
		"view": "simpleconnection.svg",
		"icon": "simpleconnection.png",
		"propertyPackages": ["baseProperties"],
		"layout": [{
			"type": "layout.bpmn2_0.sequenceflow"
		}],
		"roles": ["all", "Connection", "ConnectingObjectsMorph"],
		"properties": [
		]
	},
	{
		"type": "edge",
		"id": "WhenConnection",
		"title": "When Connection",
		"title_de": "Wenn Verbindung",
		"groups": ["Connecting Objects"],
		"groups_de": ["Konnektoren"],
		"view": "whenconnection.svg",
		"icon": "whenconnection.png",
		"propertyPackages": ["baseProperties", "expressionProperties"],
		"roles": ["all", "Connection", "ConnectingObjectsMorph"],
		"properties": [{
      "id" : "defaultflow",
      "type" : "Choice",
      "title" : "Default flow",
      "title_de" : "Standardfluß",
      "value" : "none",
      "popular" : true,
      "items" : [ {
        "id" : "none",
        "title" : "No",
        "title_de" : "Nein",
        "value" : "none"
      }, {
        "id" : "default",
        "title" : "Yes",
        "title_de" : "Ja",
        "value" : "default",
        "icon" : "type.default.png",
        "refToView" : "default"
      }]
		}]
	}],
  "rules" : {
    "cardinalityRules" : [ {
      "role" : "OneInOutRole",
      "incomingEdges" : [ {
        "role" : "Connection",
        "maximum" : 1
      } ],
      "outgoingEdges" : [ {
        "role" : "Connection",
        "maximum" : 1
      } ]
    }, {
      "role" : "OneOutRole",
      "incomingEdges" : [ {
        "role" : "Connection",
        "maximum" : 0
      } ],
      "outgoingEdges" : [ {
        "role" : "Connection",
        "maximum" : 1
      } ]
    }, {
      "role" : "MessageChoice",
      "incomingEdges" : [ {
        "role" : "Connection",
        "maximum" : 1
      } ]
    }, {
      "role" : "MessageAggregate",
      "outgoingEdges" : [ {
        "role" : "Connection",
        "maximum" : 1
      } ]
    } 
		],
    "connectionRules" : [ {
      "role" : "SimpleConnection",
      "connects" : [ {
        "from" : "simpleConnectionStart",
        "to" : [ "simpleConnectionEnd" ]
      } ]
    },{
      "role" : "WhenConnection",
      "connects" : [ {
        "from" : "whenConnectionStart",
        "to" : [ "whenConnectionEnd" ]
      }]
    }],
    "containmentRules" : [ {
      "role" : "Camelrouting",
      "contains" : [ "all" ]
    }, {
      "role" : "SubProcess",
      "contains" : [ "simpleConnectionStart", "simpleConnectionEnd", "EventSubprocess", "TextAnnotation" ]
    }, {
      "role" : "EventSubProcess",
      "contains" : [ "simpleConnectionStart", "simpleConnectionEnd", "TextAnnotation" ]
    } ],
    "morphingRules" : [ {
      "role" : "EndpointsMorph",
      "baseMorphs" : [ "GenericEndpoint" ],
      "preserveBounds" : true
    }, {
      "role" : "TransformerMorph",
      "baseMorphs" : [ "Processor" ],
      "preserveBounds" : true
    }, {
      "role" : "RoutingMorph",
      "baseMorphs" : [ "MessageChoice" ]
    }]
  },
  "definitions":{
		"language_items": [ {
			"id": "groovy",
			"title": "Groovy",
			"value": "groovy"
		},{
			"id": "constant",
			"title": "Constant",
			"value": "constant"
		},{
			"id": "header",
			"title": "Header",
			"value": "header"
		},{
			"id": "property",
			"title": "Property",
			"value": "property"
		},{
			"id": "tokenize",
			"title": "Tokenize",
			"value": "tokenize"
		},{
			"id": "bean",
			"title": "Bean",
			"value": "bean"
		},{
			"id": "simple",
			"title": "Simple",
			"value": "simple"
		},{
			"id": "javascript",
			"title": "Javascrip",
			"value": "javascript"
		},{
			"id": "el",
			"title": "El",
			"value": "el"
		},{
			"id": "sql",
			"title": "SQL",
			"value": "sql"
		},{
			"id": "xpath",
			"title": "XPath",
			"value": "xpath"
		},{
			"id": "mvel",
			"title": "Mvel",
			"value": "mvel"
		},{
			"id": "ognl",
			"title": "Ognl",
			"value": "ognl"
		}],
		"parametertype_items": [ {
			"id": "string",
			"title": "String",
			"value": "string"
		},{
			"id": "integer",
			"title": "Integer",
			"value": "integer"
		},{
			"id": "double",
			"title": "Double",
			"value": "double"
		},{
			"id": "boolean",
			"title": "Boolean",
			"value": "boolean"
		},{
			"id": "list",
			"title": "List",
			"value": "list"
		},{
			"id": "map",
			"title": "Map",
			"value": "map"
		}],
		"destination_items": [ {
			"id": "property",
			"title": "Property",
			"value": "property"
		},{
			"id": "header",
			"title": "Header",
			"value": "header"
		},{
			"id": "body",
			"title": "Body",
			"value": "body"
		}]
  }
}
